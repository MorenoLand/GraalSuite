name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Create build script
      run: |
        cat > build_linux.sh << EOF
#!/bin/bash

mkdir -p bin build

javac -d build -Xlint:-deprecation -Xlint:-unchecked -cp .:rsyntaxtextarea-3.0.0-SNAPSHOT.jar com/dinkygames/graaleditor/*.java com/dinkygames/graaleditor/undo/*.java org/eclipse/jdt/internal/jarinjarloader/*.java

if [ \$? -ne 0 ]; then
    echo "Compilation failed"
    exit 1
fi

cd build
jar xf ../rsyntaxtextarea-3.0.0-SNAPSHOT.jar
cd ..

cp -r res build/
cp -r META-INF build/ 2>/dev/null || mkdir -p build/META-INF

echo "Manifest-Version: 1.0" > manifest.txt
echo "Main-Class: com.dinkygames.graaleditor.GraalEditor" >> manifest.txt

jar cvfm bin/GraalSuite.jar manifest.txt -C build .

rm -rf build manifest.txt

echo "Build complete: bin/GraalSuite.jar"
EOF
        chmod +x build_linux.sh
        
    - name: Build JAR
      run: ./build_linux.sh
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GraalSuite
        path: bin/GraalSuite.jar
        
    - name: Upload to Release
      if: github.event_name == 'release'
      run: |
        gh release upload ${{ github.event.release.tag_name }} bin/GraalSuite.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
