name: Build Native Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created, published]

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Build JAR
      run: |
        mkdir -p bin build
        javac -d build -Xlint:-deprecation -Xlint:-unchecked -cp .:rsyntaxtextarea-3.0.0-SNAPSHOT.jar com/dinkygames/graaleditor/*.java com/dinkygames/graaleditor/undo/*.java org/eclipse/jdt/internal/jarinjarloader/*.java
        cd build
        jar xf ../rsyntaxtextarea-3.0.0-SNAPSHOT.jar
        cd ..
        cp -r res build/
        cp -r META-INF build/ 2>/dev/null || mkdir -p build/META-INF
        echo "Manifest-Version: 1.0" > manifest.txt
        echo "Main-Class: com.dinkygames.graaleditor.GraalEditor" >> manifest.txt
        jar cvfm bin/GraalSuite.jar manifest.txt -C build .
        rm -rf build manifest.txt
        
    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GraalSuite-JAR-${{ github.run_id }}
        path: bin/GraalSuite.jar
        
  build-windows-exe:
    needs: build-jar
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download JAR
      uses: actions/download-artifact@v4
      with:
        name: GraalSuite-JAR-${{ github.run_id }}
        path: bin
        
    - name: Set up Launch4j
      run: |
        mkdir launch4j
        Invoke-WebRequest -Uri "https://master.dl.sourceforge.net/project/launch4j/launch4j-3/3.14/launch4j-3.14-win32.zip?viasf=1" -OutFile "launch4j.zip"
        Expand-Archive -Path launch4j.zip -DestinationPath .
        Rename-Item launch4j-3.14-win32 launch4j
      shell: powershell
  
    - name: Create EXE
      run: |
        echo ^<launch4jConfig^> > config.xml
        echo   ^<dontWrapJar^>false^</dontWrapJar^> >> config.xml
        echo   ^<headerType^>gui^</headerType^> >> config.xml
        echo   ^<jar^>bin\GraalSuite.jar^</jar^> >> config.xml
        echo   ^<outfile^>bin\GraalSuite.exe^</outfile^> >> config.xml
        echo   ^<errTitle^>GraalSuite Error^</errTitle^> >> config.xml
        echo   ^<chdir^>^</chdir^> >> config.xml
        echo   ^<customProcName^>true^</customProcName^> >> config.xml
        echo   ^<icon^>res\graalico_editor.ico^</icon^> >> config.xml
        echo   ^<jre^> >> config.xml
        echo     ^<path^>^</path^> >> config.xml
        echo     ^<minVersion^>1.8.0^</minVersion^> >> config.xml
        echo     ^<jdkPreference^>preferJre^</jdkPreference^> >> config.xml
        echo   ^</jre^> >> config.xml
        echo   ^<versionInfo^> >> config.xml
        echo     ^<fileVersion^>1.0.0.0^</fileVersion^> >> config.xml
        echo     ^<txtFileVersion^>1.0.0.0^</txtFileVersion^> >> config.xml
        echo     ^<fileDescription^>GraalSuite Editor^</fileDescription^> >> config.xml
        echo     ^<copyright^>^</copyright^> >> config.xml
        echo     ^<productVersion^>1.0.0.0^</productVersion^> >> config.xml
        echo     ^<txtProductVersion^>1.0.0.0^</txtProductVersion^> >> config.xml
        echo     ^<productName^>GraalSuite^</productName^> >> config.xml
        echo     ^<internalName^>GraalSuite^</internalName^> >> config.xml
        echo     ^<originalFilename^>GraalSuite.exe^</originalFilename^> >> config.xml
        echo   ^</versionInfo^> >> config.xml
        echo ^</launch4jConfig^> >> config.xml
        launch4j\launch4j.exe config.xml
      shell: cmd
        
    - name: Upload Windows EXE
      uses: actions/upload-artifact@v4
      with:
        name: GraalSuite-Windows-${{ github.run_id }}
        path: bin/GraalSuite.exe
        
    - name: Upload Windows EXE
      uses: actions/upload-artifact@v4
      with:
        name: GraalSuite-Windows
        path: bin/GraalSuite.exe
        
  build-linux-appimage:
    needs: build-jar
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download JAR
      uses: actions/download-artifact@v4
      with:
        name: GraalSuite-JAR-${{ github.run_id }}
        path: bin
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fuse libfuse2 imagemagick
        wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
        chmod +x appimagetool
        
    - name: Prepare AppDir structure
      run: |
        mkdir -p AppDir/usr/bin AppDir/usr/share/applications AppDir/usr/share/icons/hicolor/256x256/apps
        cp bin/GraalSuite.jar AppDir/usr/bin/
        convert res/graalico_editor.png -resize 256x256 AppDir/usr/share/icons/hicolor/256x256/apps/graalsuite.png || cp res/graalico_editor.png AppDir/usr/share/icons/hicolor/256x256/apps/graalsuite.png
        
        cat > AppDir/AppRun << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        EXEC="java"
        exec "$EXEC" -jar "$HERE/usr/bin/GraalSuite.jar" "$@"
        EOF
        chmod +x AppDir/AppRun
        
        cat > AppDir/usr/share/applications/graalsuite.desktop << 'EOF'
        [Desktop Entry]
        Name=GraalSuite
        Exec=java -jar usr/bin/GraalSuite.jar
        Icon=graalsuite
        Type=Application
        Categories=Development;
        EOF
        
        ln -s usr/share/applications/graalsuite.desktop AppDir/graalsuite.desktop
        ln -s usr/share/icons/hicolor/256x256/apps/graalsuite.png AppDir/graalsuite.png
        cp AppDir/usr/share/icons/hicolor/256x256/apps/graalsuite.png AppDir/.DirIcon
        
    - name: Build AppImage
      run: |
        ARCH=x86_64 ./appimagetool AppDir GraalSuite
        
    - name: Upload Linux AppImage
      uses: actions/upload-artifact@v4
      with:
        name: GraalSuite-Linux-${{ github.run_id }}
        path: GraalSuite
        
  upload-release:
    if: github.event_name == 'release'
    needs: [build-jar, build-windows-exe, build-linux-appimage]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Upload artifacts to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          GraalSuite-JAR-${{ github.run_id }}/GraalSuite.jar
          GraalSuite-Windows-${{ github.run_id }}/GraalSuite.exe
          GraalSuite-Linux-${{ github.run_id }}/GraalSuite
